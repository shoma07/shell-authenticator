#!/bin/sh

DEFAULT_INTERVAL=30
DEFAULT_DIGITS=6

timeint () {
  echo "$(date -u +%s)"
}

timecode () {
  if [ -p /dev/stdin ] && [ -z "${@}" ]; then args=$(cat -); else args=${@}; fi

  int="${args}"
  if [ -z "${int}" ];then int=$(timeint); fi
  echo $((${int}/${DEFAULT_INTERVAL}))
}

int2bytestring () {
  if [ -p /dev/stdin ] && [ -z "${@}" ]; then args=$(cat -); else args=${@}; fi

  int="${args}"
  array=()
  while :; do
    array+=("$((${int}&0xFF))")
    int=$((${int}>>8))
    if [ ${int} = 0 ]; then break; fi
  done
  printf "%s" $(for (( i = 7; i >= 0; i-- )); do
    if [ -z "${array[i]}" ]; then
      printf "\\\x%02X" "0"
    else
      printf "\\\x%02X" "${array[i]}"
    fi
  done)
}

base32_decode () {
  if [ -p /dev/stdin ] && [ -z "${@}" ]; then args=$(cat -); else args=${@}; fi

  chars=(a b c d e f g h i j k l m n o p q r s t u v w x y z 2 3 4 5 6 7)
  printf "%s" $(echo $(echo "${args}" | sed "s/=//g") | fold -8 | while read s; do
    echo $(echo "${s}" | fold -1 | while read c; do
      c=$(echo ${c} | tr '[A-Z]' '[a-z]')
      for (( i = 0; i < ${#chars[@]}; i++ )); do
        if [ "${chars[${i}]}" != "${c}" ]; then continue; fi

        printf "%05d" $(echo "obase=2;ibase=10;${i}" | bc)
        break
      done
    done) | fold -8 | while read b; do
      if [ ${#b} -lt 8 ]; then break; fi

      printf "\\\x%02X" "$(echo "obase=10;ibase=2;${b}" | bc)"
    done
  done)
}

h2d () {
  if [ -p /dev/stdin ] && [ -z "${@}" ]; then args=$(cat -); else args=${@}; fi

  echo "obase=10;ibase=16;$(echo ${args} | tr '[a-z]' '[A-Z]')" | bc
}

generate_otp () {
  if [ -p /dev/stdin ] && [ -z "${@}" ]; then args=$(cat -); else args=${@}; fi

  data=$(int2bytestring $(timecode))
  key=$(base32_decode ${args})
  hmac=$(printf ${data} | openssl dgst -sha1 -hmac "$(printf ${key})")
  offset=$(($(($(h2d ${hmac:38:2})&0xf))*2))
  code=$((
    $(($(($(h2d ${hmac:${offset}:2})&0x7f))<<24))|
    $(($(($(h2d ${hmac:$((${offset}+2)):2})&0xff))<<16))|
    $(($(($(h2d ${hmac:$((${offset}+4)):2})&0xff))<<8))|
    $(($(h2d ${hmac:$((${offset}+6)):2})&0xff))
  ))
  printf "%06d\n" $((${code}%10**${DEFAULT_DIGITS}))
}

generate_otp ${1}
